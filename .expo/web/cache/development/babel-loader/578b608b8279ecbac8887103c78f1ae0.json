{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/elwx/Documents/GitHub/SmileTrade/screens/Chat.js\";\nimport React, { useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ListItem from \"../Components/ListItem\";\nimport ListItemDeleteAction from \"../Components/ListItemDeleteAction\";\nimport ListItemSeparator from \"../Components/ListItemSeparator\";\nimport Screen from \"../Components/Screen\";\nvar initialMessages = [{\n  id: 1,\n  title: 'T1',\n  message: \"Hey! Is this item still available?\",\n  image: require(\"../assets/Jake.jpg\")\n}, {\n  id: 2,\n  title: 'T2',\n  message: \"I'm interested in this item. When will you be able to post it?\",\n  image: require(\"../assets/Jake.jpg\")\n}];\n\nfunction Chat(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(initialMessages),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refreshing = _useState4[0],\n      setRefreshing = _useState4[1];\n\n  var handleDelete = function handleDelete(message) {\n    setMessages(messages.filter(function (m) {\n      return m.id !== message.id;\n    }));\n  };\n\n  return React.createElement(Screen, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: messages,\n    keyExtractor: function keyExtractor(message) {\n      return message.id.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(ListItem, {\n        title: item.title,\n        subTitle: item.message,\n        image: item.image,\n        onPress: function onPress() {\n          return navigation.navigate('Messages', {\n            item: item.title\n          });\n        },\n        renderRightActions: function renderRightActions() {\n          return React.createElement(ListItemDeleteAction, {\n            onPress: function onPress() {\n              return handleDelete(item);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      });\n    },\n    ItemSeparatorComponent: ListItemSeparator,\n    refreshing: refreshing,\n    onRefresh: function onRefresh() {\n      setMessages([{\n        id: 2,\n        title: \"T2\",\n        message: \"D2\",\n        image: require(\"../assets/Jake.jpg\")\n      }]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#efc7c1\"\n  }\n});\nexport default Chat;","map":{"version":3,"sources":["/Users/elwx/Documents/GitHub/SmileTrade/screens/Chat.js"],"names":["React","useState","ListItem","ListItemDeleteAction","ListItemSeparator","Screen","initialMessages","id","title","message","image","require","Chat","navigation","messages","setMessages","refreshing","setRefreshing","handleDelete","filter","m","styles","container","toString","item","navigate","StyleSheet","create","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,OAAOC,QAAP;AACA,OAAOC,oBAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,MAAP;AAEA,IAAMC,eAAe,GAAG,CACxB;AACIC,EAAAA,EAAE,EAAC,CADP;AAEIC,EAAAA,KAAK,EAAE,IAFX;AAGIC,EAAAA,OAAO,EAAE,oCAHb;AAIIC,EAAAA,KAAK,EAAEC,OAAO;AAJlB,CADwB,EAOxB;AACIJ,EAAAA,EAAE,EAAC,CADP;AAEIC,EAAAA,KAAK,EAAE,IAFX;AAGIC,EAAAA,OAAO,EAAE,gEAHb;AAIIC,EAAAA,KAAK,EAAEC,OAAO;AAJlB,CAPwB,CAAxB;;AAeA,SAASC,IAAT,OAA4B;AAAA;;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AAC1B,kBAAgCZ,QAAQ,CAACK,eAAD,CAAxC;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAoCd,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOe,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACT,OAAD,EAAa;AAEhCM,IAAAA,WAAW,CAACD,QAAQ,CAACK,MAAT,CAAgB,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACb,EAAF,KAASE,OAAO,CAACF,EAAxB;AAAA,KAAhB,CAAD,CAAX;AACD,GAHD;;AAKA,SACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEc,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAER,QADR;AAEE,IAAA,YAAY,EAAE,sBAACL,OAAD;AAAA,aAAaA,OAAO,CAACF,EAAR,CAAWgB,QAAX,EAAb;AAAA,KAFhB;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,QAAD;AACE,QAAA,KAAK,EAAEA,IAAI,CAAChB,KADd;AAEE,QAAA,QAAQ,EAAEgB,IAAI,CAACf,OAFjB;AAGE,QAAA,KAAK,EAAEe,IAAI,CAACd,KAHd;AAIE,QAAA,OAAO,EAAE;AAAA,iBAAMG,UAAU,CAACY,QAAX,CAAoB,UAApB,EAAgC;AAACD,YAAAA,IAAI,EAACA,IAAI,CAAChB;AAAX,WAAhC,CAAN;AAAA,SAJX;AAKE,QAAA,kBAAkB,EAAE;AAAA,iBAClB,oBAAC,oBAAD;AAAsB,YAAA,OAAO,EAAE;AAAA,qBAAMU,YAAY,CAACM,IAAD,CAAlB;AAAA,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADkB;AAAA,SALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU;AAAA,KAHd;AAcE,IAAA,sBAAsB,EAAEpB,iBAd1B;AAeE,IAAA,UAAU,EAAEY,UAfd;AAgBE,IAAA,SAAS,EAAE,qBAAM;AACfD,MAAAA,WAAW,CAAC,CACV;AACER,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE,IAFT;AAGEC,QAAAA,OAAO,EAAE,IAHX;AAIEC,QAAAA,KAAK,EAAEC,OAAO;AAJhB,OADU,CAAD,CAAX;AAQD,KAzBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AA+BD;;AAGD,IAAMU,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAC;AACRM,IAAAA,eAAe,EAAE;AADT;AADqB,CAAlB,CAAf;AAOA,eAAehB,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { FlatList, StyleSheet } from 'react-native';\nimport ListItem from '../Components/ListItem';\nimport ListItemDeleteAction from '../Components/ListItemDeleteAction';\nimport ListItemSeparator from '../Components/ListItemSeparator';\nimport Screen from \"../Components/Screen\";\n\nconst initialMessages = [\n{\n    id:1,\n    title: 'T1',\n    message: \"Hey! Is this item still available?\",\n    image: require(\"../assets/Jake.jpg\")\n},\n{\n    id:2,\n    title: 'T2',\n    message: \"I'm interested in this item. When will you be able to post it?\",\n    image: require(\"../assets/Jake.jpg\")\n}\n]\n\nfunction Chat({navigation}) {\n  const [messages, setMessages] = useState(initialMessages);\n  const [refreshing, setRefreshing] = useState(false);\n\n  const handleDelete = (message) => {\n    // Delete the message from messages\n    setMessages(messages.filter((m) => m.id !== message.id));\n  };\n//console.log(\"Message selected\"\n  return (\n    <Screen style={styles.container}>\n      <FlatList\n        data={messages}\n        keyExtractor={(message) => message.id.toString()}\n        renderItem={({ item }) => (\n          <ListItem\n            title={item.title}\n            subTitle={item.message}\n            image={item.image}\n            onPress={() => navigation.navigate('Messages', {item:item.title})}\n            renderRightActions={() => (\n              <ListItemDeleteAction onPress={() => handleDelete(item)} />\n            )}\n          />\n        )}\n        ItemSeparatorComponent={ListItemSeparator}\n        refreshing={refreshing}\n        onRefresh={() => {\n          setMessages([\n            {\n              id: 2,\n              title: \"T2\",\n              message: \"D2\",\n              image: require(\"../assets/Jake.jpg\"),\n            },\n          ]);\n        }}\n      />\n    </Screen>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container:{\n    backgroundColor: \"#efc7c1\"\n  }\n\n});\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}