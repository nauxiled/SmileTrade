{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/elwx/Documents/GitHub/SmileTrade/routes/Routes.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { auth } from \"../firebase/firebase\";\nimport AuthNavigator from \"./AuthNavigation\";\nimport AppNavigator from \"./AppNavigator\";\nimport { AuthUserContext } from \"./AuthUserProvider\";\nimport Spinner from \"../Components/Spinner\";\nexport default function Routes() {\n  var _useContext = useContext(AuthUserContext),\n      user = _useContext.user,\n      setUser = _useContext.setUser;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  useEffect(function () {\n    var unsubscribeAuth = auth.onAuthStateChanged(function _callee(authUser) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(authUser ? setUser(authUser) : setUser(null));\n\n            case 3:\n              setIsLoading(false);\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]], Promise);\n    });\n    return unsubscribeAuth;\n  }, []);\n\n  if (isLoading) {\n    return React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, user ? React.createElement(AppNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }\n  }) : React.createElement(AuthNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 38\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/elwx/Documents/GitHub/SmileTrade/routes/Routes.js"],"names":["React","useContext","useEffect","useState","NavigationContainer","auth","AuthNavigator","AppNavigator","AuthUserContext","Spinner","Routes","user","setUser","isLoading","setIsLoading","unsubscribeAuth","onAuthStateChanged","authUser","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SAASC,IAAT;AACA,OAAOC,aAAP;AACA,OAAOC,YAAP;AACA,SAAQC,eAAR;AACA,OAAOC,OAAP;AAGA,eAAe,SAASC,MAAT,GAAkB;AAC7B,oBAAuBT,UAAU,CAACO,eAAD,CAAjC;AAAA,MAAOG,IAAP,eAAOA,IAAP;AAAA,MAAYC,OAAZ,eAAYA,OAAZ;;AACA,kBAAiCT,QAAQ,CAAC,IAAD,CAAzC;AAAA;AAAA,MAAOU,SAAP;AAAA,MAAiBC,YAAjB;;AACAZ,EAAAA,SAAS,CAAC,YAAM;AAEZ,QAAMa,eAAe,GAAGV,IAAI,CAACW,kBAAL,CAAwB,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAErCA,QAAQ,GAAGL,OAAO,CAACK,QAAD,CAAV,GAAuBL,OAAO,CAAC,IAAD,CAFD;;AAAA;AAG5CE,cAAAA,YAAY,CAAC,KAAD,CAAZ;AAH4C;AAAA;;AAAA;AAAA;AAAA;AAK5CI,cAAAA,OAAO,CAACC,GAAR;;AAL4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxB,CAAxB;AAUA,WAAOJ,eAAP;AACD,GAbM,EAaJ,EAbI,CAAT;;AAeE,MAAIF,SAAJ,EAAe;AACb,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,GAAG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAsB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD7B,CADF;AAKL","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\n\nimport { auth } from '../firebase/firebase';\nimport AuthNavigator from './AuthNavigation';\nimport AppNavigator from './AppNavigator';\nimport {AuthUserContext} from './AuthUserProvider';\nimport Spinner from '../Components/Spinner';\n\n\nexport default function Routes() {\n    const {user,setUser} = useContext(AuthUserContext);\n    const [isLoading,setIsLoading] = useState(true);\n    useEffect(() => {\n\n        const unsubscribeAuth = auth.onAuthStateChanged(async authUser => {\n          try {\n            await (authUser ? setUser(authUser) : setUser(null));\n            setIsLoading(false)\n          } catch (error) {\n            console.log(error);\n          }\n        });\n    \n      \n        return unsubscribeAuth;\n      }, []);\n    \n      if (isLoading) {\n        return <Spinner />;\n      }\n    \n      return (\n        <NavigationContainer>\n          {user ? <AppNavigator /> : <AuthNavigator />}\n       </NavigationContainer>\n      );\n}\n    \n"]},"metadata":{},"sourceType":"module"}