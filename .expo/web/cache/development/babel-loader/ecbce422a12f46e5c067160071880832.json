{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/elwx/Documents/GitHub/SmileTrade/screens/Messages.js\";\n\nimport React, { useState, useEffect, useCallback, useLayoutEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Bubble, GiftedChat, Send } from 'react-native-gifted-chat';\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport auth, { db } from \"../firebase/firebase\";\n\nvar Messages = function Messages() {\n  var _auth$currentUser;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  useEffect(function () {\n    setMessages([{\n      _id: 1,\n      text: 'Hey is this item available?',\n      createdAt: new Date(),\n      user: {\n        _id: 2\n      }\n    }]);\n  }, []);\n\n  var _onSend = useCallback(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n  }, []);\n\n  var renderSend = function renderSend(props) {\n    return React.createElement(Send, _extends({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, React.createElement(MaterialCommunityIcons, {\n      name: \"send-circle\",\n      style: {\n        marginBottom: 5,\n        marginRight: 5\n      },\n      size: 32,\n      color: \"#2e64e5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  var renderBubble = function renderBubble(props) {\n    return React.createElement(Bubble, _extends({}, props, {\n      wrapperStyle: {\n        right: {\n          backgroundColor: '#B22222'\n        },\n        left: {\n          backgroundColor: '#ADD8E6'\n        }\n      },\n      textStyle: {\n        right: {\n          color: '#fff'\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  var scrollToBottomComponent = function scrollToBottomComponent() {\n    return React.createElement(FontAwesome, {\n      name: \"angle-double-down\",\n      size: 22,\n      color: \"#333\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return React.createElement(GiftedChat, {\n    messages: messages,\n    onSend: function onSend(messages) {\n      return _onSend(messages);\n    },\n    user: {\n      _id: auth == null ? void 0 : (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.email\n    },\n    renderBubble: renderBubble,\n    alwaysShowSend: true,\n    renderSend: renderSend,\n    scrollToBottom: true,\n    scrollToBottomComponent: scrollToBottomComponent,\n    backgroundImage: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default Messages;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/elwx/Documents/GitHub/SmileTrade/screens/Messages.js"],"names":["React","useState","useEffect","useCallback","useLayoutEffect","Bubble","GiftedChat","Send","MaterialCommunityIcons","FontAwesome","auth","db","Messages","messages","setMessages","_id","text","createdAt","Date","user","onSend","previousMessages","append","renderSend","props","marginBottom","marginRight","renderBubble","right","backgroundColor","left","color","scrollToBottomComponent","currentUser","email","styles","StyleSheet","create","container","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback, useLayoutEffect} from 'react';\nimport {View, StyleSheet} from 'react-native';\nimport {Bubble, GiftedChat, Send} from 'react-native-gifted-chat';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\nimport auth, { db } from '../firebase/firebase'\n\nconst Messages = () => {\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    setMessages([\n      // {\n      //   _id: 1,// To \n      //   text: 'Yes it is!',\n      //   createdAt: new Date(),\n      //   user: {\n      //     _id: auth?.currentUser?.email,// From\n      //     // name: 'React Native',\n      //     avatar: '../assets/Jake.jpg',\n      //   },\n      // },\n      {\n        _id: 1 ,// To \n        text: 'Hey is this item available?',\n        createdAt: new Date(),\n        user: {\n          _id: 2 ,// From\n          // name: 'React Native',\n          // avatar: '../assets/Jake.jpg',\n        },\n      },\n    ]);\n  }, []);\n  \n\n  const onSend = useCallback((messages = []) => {\n    setMessages((previousMessages) =>GiftedChat.\n    append(previousMessages, messages))\n    \n  }, []);\n\n  const renderSend = (props) => {\n    return (\n      <Send {...props}>\n        <View>\n          <MaterialCommunityIcons\n            name=\"send-circle\"\n            style={{marginBottom: 5, marginRight: 5}}\n            size={32}\n            color=\"#2e64e5\"\n          />\n        </View>\n      </Send>\n    );\n  };\n\n  const renderBubble = (props) => {\n    return (\n      <Bubble\n        {...props}\n        wrapperStyle={{\n          right: {\n            backgroundColor: '#B22222',\n          },\n          left: {\n            backgroundColor: '#ADD8E6',\n          \n          }\n        }}\n        textStyle={{\n          right: {\n            color: '#fff',\n          },\n        }}\n      />\n    );\n  };\n\n  const scrollToBottomComponent = () => {\n    return(\n      <FontAwesome name='angle-double-down' size={22} color='#333' />\n    );\n  }\n\n  return (\n    <GiftedChat\n      messages={messages}\n      onSend={(messages) => onSend(messages)}\n      user={{\n        _id: auth?.currentUser?.email,\n      }}\n      renderBubble={renderBubble}\n      alwaysShowSend\n      renderSend={renderSend}\n      scrollToBottom\n      scrollToBottomComponent={scrollToBottomComponent}\n      backgroundImage\n    />\n  );\n};\n\nexport default Messages;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    \n  },\n});"]},"metadata":{},"sourceType":"module"}